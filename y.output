Terminals unused in grammar

   TOK_FLECHA
   TOK_ERROR
   TOK_FOR
   TOK_SWITCH
   TOK_CASE
   TOK_DEFAULT
   TOK_FLOAT
   TOK_MALLOC
   TOK_CPRINTF
   TOK_FREE
   TOK_SET
   TOK_OF
   TOK_UNION
   TOK_INTERSECTION
   TOK_ADD
   TOK_CLEAR
   TOK_SIZE
   TOK_CONTAINS
   TOK_CONSTANTE_REAL


Grammar

    0 $accept: programa $end

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}'
    2         | TOK_MAIN '{' iniciar_codigo funciones inicio_main sentencias '}'

    3 iniciar_codigo: %empty

    4 escribir_variables: %empty

    5 inicio_main: %empty

    6 declaraciones: declaracion declaraciones
    7              | declaracion

    8 declaracion: modificadores_acceso clase identificadores ';'
    9            | modificadores_acceso declaracion_clase ';'

   10 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE
   11                     | TOK_SECRET TOK_UNIQUE
   12                     | TOK_EXPOSED TOK_UNIQUE
   13                     | TOK_HIDDEN
   14                     | TOK_SECRET
   15                     | TOK_EXPOSED
   16                     | TOK_UNIQUE
   17                     | %empty

   18 clase: clase_escalar
   19      | clase_vector
   20      | clase_objeto

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

   23 modificadores_clase: %empty

   24 clase_escalar: tipo

   25 tipo: TOK_INT
   26     | TOK_BOOLEAN

   27 clase_objeto: '{' TOK_IDENTIFICADOR '}'

   28 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']'
   29             | TOK_ARRAY tipo '[' constante_entera ',' constante_entera ']'

   30 identificadores: identificador
   31                | identificador ',' identificadores

   32 funciones: funcion funciones
   33          | %empty

   34 funcion: fn_declaration sentencias '}'

   35 fn_declaration: fn_complete_name '{' declaraciones_funcion

   36 fn_complete_name: fn_name '(' parametros_funcion ')'

   37 fn_name: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR

   38 tipo_retorno: TOK_NONE
   39             | tipo
   40             | clase_objeto

   41 parametros_funcion: parametro_funcion resto_parametros_funcion
   42                   | %empty

   43 resto_parametros_funcion: ',' parametro_funcion resto_parametros_funcion
   44                         | %empty

   45 parametro_funcion: tipo idpf
   46                  | clase_objeto TOK_IDENTIFICADOR

   47 idpf: TOK_IDENTIFICADOR

   48 declaraciones_funcion: declaraciones
   49                      | %empty

   50 sentencias: sentencia
   51           | sentencia sentencias

   52 sentencia: sentencia_simple ';'
   53          | bloque

   54 sentencia_simple: asignacion
   55                 | lectura
   56                 | escritura
   57                 | retorno_funcion
   58                 | identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   59                 | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   60                 | destruir_objeto

   61 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR

   62 bloque: condicional
   63       | bucle

   64 asignacion: TOK_IDENTIFICADOR '=' exp
   65           | elemento_vector '=' exp
   66           | elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   67           | TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   68           | identificador_clase '.' TOK_IDENTIFICADOR '=' exp

   69 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   70 condicional: if_exp sentencias '}'
   71            | if_exp_sentencias TOK_ELSE '{' sentencias '}'

   72 if_exp: TOK_IF '(' exp ')' '{'

   73 if_exp_sentencias: if_exp sentencias '}'

   74 bucle: while_exp sentencias '}'

   75 while_exp: while exp ')' '{'

   76 while: TOK_WHILE '('

   77 lectura: TOK_SCANF TOK_IDENTIFICADOR
   78        | TOK_SCANF elemento_vector

   79 escritura: TOK_PRINTF exp

   80 retorno_funcion: TOK_RETURN exp
   81                | TOK_RETURN TOK_NONE

   82 exp: exp '+' exp
   83    | exp '-' exp
   84    | exp '/' exp
   85    | exp '*' exp
   86    | '-' exp
   87    | exp TOK_AND exp
   88    | exp TOK_OR exp
   89    | '!' exp
   90    | TOK_IDENTIFICADOR
   91    | constante
   92    | '(' exp ')'
   93    | '(' comparacion ')'
   94    | elemento_vector
   95    | idf_llamada '(' lista_expresiones ')'
   96    | identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones ')'
   97    | identificador_clase TOK_IDENTIFICADOR

   98 idf_llamada: TOK_IDENTIFICADOR

   99 identificador_clase: TOK_IDENTIFICADOR
  100                    | TOK_ITSELF

  101 lista_expresiones: exp resto_lista_expresiones
  102                  | %empty

  103 resto_lista_expresiones: ',' exp resto_lista_expresiones
  104                        | %empty

  105 comparacion: exp TOK_IGUAL exp
  106            | exp TOK_DISTINTO exp
  107            | exp TOK_MENORIGUAL exp
  108            | exp TOK_MAYORIGUAL exp
  109            | exp '<' exp
  110            | exp '>' exp

  111 constante: constante_logica
  112          | constante_entera

  113 constante_logica: TOK_TRUE
  114                 | TOK_FALSE

  115 constante_entera: TOK_CONSTANTE_ENTERA

  116 identificador: TOK_IDENTIFICADOR


Terminals, with rules where they appear

$end (0) 0
'!' (33) 89
'(' (40) 36 58 59 66 67 72 76 92 93 95 96
')' (41) 36 58 59 66 67 72 75 92 93 95 96
'*' (42) 85
'+' (43) 82
',' (44) 29 31 43 103
'-' (45) 83 86
'.' (46) 58 68
'/' (47) 84
';' (59) 8 9 52
'<' (60) 109
'=' (61) 64 65 66 67 68
'>' (62) 110
'[' (91) 28 29 69
']' (93) 28 29 69
'{' (123) 1 2 21 22 27 35 71 72 75
'}' (125) 1 2 21 22 27 34 70 71 73 74
error (256)
TOK_IDENTIFICADOR (258) 21 22 27 37 46 47 58 59 61 64 66 67 68 69 77
    90 96 97 98 99 116
TOK_CONSTANTE_ENTERA (259) 28 115
TOK_NONE (260) 38 81
TOK_CLASS (261) 21 22
TOK_INHERITS (262) 21
TOK_INSTANCE_OF (263) 66 67
TOK_DISCARD (264) 61
TOK_ITSELF (265) 100
TOK_FLECHA (266)
TOK_HIDDEN (267) 10 13
TOK_SECRET (268) 11 14
TOK_EXPOSED (269) 12 15
TOK_UNIQUE (270) 10 11 12 16
TOK_FUNCTION (271) 37
TOK_RETURN (272) 80 81
TOK_MAIN (273) 1 2
TOK_INT (274) 25
TOK_BOOLEAN (275) 26
TOK_ARRAY (276) 28 29
TOK_IF (277) 72
TOK_ELSE (278) 71
TOK_WHILE (279) 76
TOK_SCANF (280) 77 78
TOK_PRINTF (281) 79
TOK_IGUAL (282) 105
TOK_DISTINTO (283) 106
TOK_MENORIGUAL (284) 107
TOK_MAYORIGUAL (285) 108
TOK_OR (286) 88
TOK_AND (287) 87
TOK_FALSE (288) 114
TOK_TRUE (289) 113
TOK_ERROR (290)
TOK_FOR (291)
TOK_SWITCH (292)
TOK_CASE (293)
TOK_DEFAULT (294)
TOK_FLOAT (295)
TOK_MALLOC (296)
TOK_CPRINTF (297)
TOK_FREE (298)
TOK_SET (299)
TOK_OF (300)
TOK_UNION (301)
TOK_INTERSECTION (302)
TOK_ADD (303)
TOK_CLEAR (304)
TOK_SIZE (305)
TOK_CONTAINS (306)
TOK_CONSTANTE_REAL (307)
NEG (308)


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
programa (72)
    on left: 1 2, on right: 0
iniciar_codigo (73)
    on left: 3, on right: 1 2
escribir_variables (74)
    on left: 4, on right: 1
inicio_main (75)
    on left: 5, on right: 1 2
declaraciones (76)
    on left: 6 7, on right: 1 6 21 22 48
declaracion (77)
    on left: 8 9, on right: 6 7
modificadores_acceso (78)
    on left: 10 11 12 13 14 15 16 17, on right: 8 9 37
clase (79)
    on left: 18 19 20, on right: 8
declaracion_clase (80)
    on left: 21 22, on right: 9
modificadores_clase (81)
    on left: 23, on right: 21 22
clase_escalar (82)
    on left: 24, on right: 18
tipo (83)
    on left: 25 26, on right: 24 28 29 39 45
clase_objeto (84)
    on left: 27, on right: 20 40 46
clase_vector (85)
    on left: 28 29, on right: 19
identificadores (86)
    on left: 30 31, on right: 8 21 31
funciones (87)
    on left: 32 33, on right: 1 2 21 22 32
funcion (88)
    on left: 34, on right: 32
fn_declaration (89)
    on left: 35, on right: 34
fn_complete_name (90)
    on left: 36, on right: 35
fn_name (91)
    on left: 37, on right: 36
tipo_retorno (92)
    on left: 38 39 40, on right: 37
parametros_funcion (93)
    on left: 41 42, on right: 36
resto_parametros_funcion (94)
    on left: 43 44, on right: 41 43
parametro_funcion (95)
    on left: 45 46, on right: 41 43
idpf (96)
    on left: 47, on right: 45
declaraciones_funcion (97)
    on left: 48 49, on right: 35
sentencias (98)
    on left: 50 51, on right: 1 2 34 51 70 71 73 74
sentencia (99)
    on left: 52 53, on right: 50 51
sentencia_simple (100)
    on left: 54 55 56 57 58 59 60, on right: 52
destruir_objeto (101)
    on left: 61, on right: 60
bloque (102)
    on left: 62 63, on right: 53
asignacion (103)
    on left: 64 65 66 67 68, on right: 54
elemento_vector (104)
    on left: 69, on right: 65 66 78 94
condicional (105)
    on left: 70 71, on right: 62
if_exp (106)
    on left: 72, on right: 70 73
if_exp_sentencias (107)
    on left: 73, on right: 71
bucle (108)
    on left: 74, on right: 63
while_exp (109)
    on left: 75, on right: 74
while (110)
    on left: 76, on right: 75
lectura (111)
    on left: 77 78, on right: 55
escritura (112)
    on left: 79, on right: 56
retorno_funcion (113)
    on left: 80 81, on right: 57
exp (114)
    on left: 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97, on right:
    64 65 68 69 72 75 79 80 82 83 84 85 86 87 88 89 92 101 103 105
    106 107 108 109 110
idf_llamada (115)
    on left: 98, on right: 95
identificador_clase (116)
    on left: 99 100, on right: 58 68 96 97
lista_expresiones (117)
    on left: 101 102, on right: 58 59 66 67 95 96
resto_lista_expresiones (118)
    on left: 103 104, on right: 101 103
comparacion (119)
    on left: 105 106 107 108 109 110, on right: 93
constante (120)
    on left: 111 112, on right: 91
constante_logica (121)
    on left: 113 114, on right: 111
constante_entera (122)
    on left: 115, on right: 29 112
identificador (123)
    on left: 116, on right: 30 31


State 0

    0 $accept: . programa $end

    TOK_MAIN  shift, and go to state 1

    programa  go to state 2


State 1

    1 programa: TOK_MAIN . '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}'
    2         | TOK_MAIN . '{' iniciar_codigo funciones inicio_main sentencias '}'

    '{'  shift, and go to state 3


State 2

    0 $accept: programa . $end

    $end  shift, and go to state 4


State 3

    1 programa: TOK_MAIN '{' . declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}'
    2         | TOK_MAIN '{' . iniciar_codigo funciones inicio_main sentencias '}'

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    TOK_CLASS    reduce using rule 17 (modificadores_acceso)
    TOK_INT      reduce using rule 17 (modificadores_acceso)
    TOK_BOOLEAN  reduce using rule 17 (modificadores_acceso)
    TOK_ARRAY    reduce using rule 17 (modificadores_acceso)
    '{'          reduce using rule 17 (modificadores_acceso)
    $default     reduce using rule 3 (iniciar_codigo)

    iniciar_codigo        go to state 9
    declaraciones         go to state 10
    declaracion           go to state 11
    modificadores_acceso  go to state 12


State 4

    0 $accept: programa $end .

    $default  accept


State 5

   10 modificadores_acceso: TOK_HIDDEN . TOK_UNIQUE
   13                     | TOK_HIDDEN .

    TOK_UNIQUE  shift, and go to state 13

    $default  reduce using rule 13 (modificadores_acceso)


State 6

   11 modificadores_acceso: TOK_SECRET . TOK_UNIQUE
   14                     | TOK_SECRET .

    TOK_UNIQUE  shift, and go to state 14

    $default  reduce using rule 14 (modificadores_acceso)


State 7

   12 modificadores_acceso: TOK_EXPOSED . TOK_UNIQUE
   15                     | TOK_EXPOSED .

    TOK_UNIQUE  shift, and go to state 15

    $default  reduce using rule 15 (modificadores_acceso)


State 8

   16 modificadores_acceso: TOK_UNIQUE .

    $default  reduce using rule 16 (modificadores_acceso)


State 9

    2 programa: TOK_MAIN '{' iniciar_codigo . funciones inicio_main sentencias '}'

    TOK_FUNCTION  shift, and go to state 16

    $default  reduce using rule 33 (funciones)

    funciones         go to state 17
    funcion           go to state 18
    fn_declaration    go to state 19
    fn_complete_name  go to state 20
    fn_name           go to state 21


State 10

    1 programa: TOK_MAIN '{' declaraciones . iniciar_codigo escribir_variables funciones inicio_main sentencias '}'

    $default  reduce using rule 3 (iniciar_codigo)

    iniciar_codigo  go to state 22


State 11

    6 declaraciones: declaracion . declaraciones
    7              | declaracion .

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    TOK_CLASS    reduce using rule 17 (modificadores_acceso)
    TOK_INT      reduce using rule 17 (modificadores_acceso)
    TOK_BOOLEAN  reduce using rule 17 (modificadores_acceso)
    TOK_ARRAY    reduce using rule 17 (modificadores_acceso)
    '{'          reduce using rule 17 (modificadores_acceso)
    $default     reduce using rule 7 (declaraciones)

    declaraciones         go to state 23
    declaracion           go to state 11
    modificadores_acceso  go to state 12


State 12

    8 declaracion: modificadores_acceso . clase identificadores ';'
    9            | modificadores_acceso . declaracion_clase ';'

    TOK_INT      shift, and go to state 24
    TOK_BOOLEAN  shift, and go to state 25
    TOK_ARRAY    shift, and go to state 26
    '{'          shift, and go to state 27

    $default  reduce using rule 23 (modificadores_clase)

    clase                go to state 28
    declaracion_clase    go to state 29
    modificadores_clase  go to state 30
    clase_escalar        go to state 31
    tipo                 go to state 32
    clase_objeto         go to state 33
    clase_vector         go to state 34


State 13

   10 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE .

    $default  reduce using rule 10 (modificadores_acceso)


State 14

   11 modificadores_acceso: TOK_SECRET TOK_UNIQUE .

    $default  reduce using rule 11 (modificadores_acceso)


State 15

   12 modificadores_acceso: TOK_EXPOSED TOK_UNIQUE .

    $default  reduce using rule 12 (modificadores_acceso)


State 16

   37 fn_name: TOK_FUNCTION . modificadores_acceso tipo_retorno TOK_IDENTIFICADOR

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    $default  reduce using rule 17 (modificadores_acceso)

    modificadores_acceso  go to state 35


State 17

    2 programa: TOK_MAIN '{' iniciar_codigo funciones . inicio_main sentencias '}'

    $default  reduce using rule 5 (inicio_main)

    inicio_main  go to state 36


State 18

   32 funciones: funcion . funciones

    TOK_FUNCTION  shift, and go to state 16

    $default  reduce using rule 33 (funciones)

    funciones         go to state 37
    funcion           go to state 18
    fn_declaration    go to state 19
    fn_complete_name  go to state 20
    fn_name           go to state 21


State 19

   34 funcion: fn_declaration . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 38
    TOK_DISCARD        shift, and go to state 39
    TOK_ITSELF         shift, and go to state 40
    TOK_RETURN         shift, and go to state 41
    TOK_IF             shift, and go to state 42
    TOK_WHILE          shift, and go to state 43
    TOK_SCANF          shift, and go to state 44
    TOK_PRINTF         shift, and go to state 45

    sentencias           go to state 46
    sentencia            go to state 47
    sentencia_simple     go to state 48
    destruir_objeto      go to state 49
    bloque               go to state 50
    asignacion           go to state 51
    elemento_vector      go to state 52
    condicional          go to state 53
    if_exp               go to state 54
    if_exp_sentencias    go to state 55
    bucle                go to state 56
    while_exp            go to state 57
    while                go to state 58
    lectura              go to state 59
    escritura            go to state 60
    retorno_funcion      go to state 61
    identificador_clase  go to state 62


State 20

   35 fn_declaration: fn_complete_name . '{' declaraciones_funcion

    '{'  shift, and go to state 63


State 21

   36 fn_complete_name: fn_name . '(' parametros_funcion ')'

    '('  shift, and go to state 64


State 22

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo . escribir_variables funciones inicio_main sentencias '}'

    $default  reduce using rule 4 (escribir_variables)

    escribir_variables  go to state 65


State 23

    6 declaraciones: declaracion declaraciones .

    $default  reduce using rule 6 (declaraciones)


State 24

   25 tipo: TOK_INT .

    $default  reduce using rule 25 (tipo)


State 25

   26 tipo: TOK_BOOLEAN .

    $default  reduce using rule 26 (tipo)


State 26

   28 clase_vector: TOK_ARRAY . tipo '[' TOK_CONSTANTE_ENTERA ']'
   29             | TOK_ARRAY . tipo '[' constante_entera ',' constante_entera ']'

    TOK_INT      shift, and go to state 24
    TOK_BOOLEAN  shift, and go to state 25

    tipo  go to state 66


State 27

   27 clase_objeto: '{' . TOK_IDENTIFICADOR '}'

    TOK_IDENTIFICADOR  shift, and go to state 67


State 28

    8 declaracion: modificadores_acceso clase . identificadores ';'

    TOK_IDENTIFICADOR  shift, and go to state 68

    identificadores  go to state 69
    identificador    go to state 70


State 29

    9 declaracion: modificadores_acceso declaracion_clase . ';'

    ';'  shift, and go to state 71


State 30

   21 declaracion_clase: modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_CLASS  shift, and go to state 72


State 31

   18 clase: clase_escalar .

    $default  reduce using rule 18 (clase)


State 32

   24 clase_escalar: tipo .

    $default  reduce using rule 24 (clase_escalar)


State 33

   20 clase: clase_objeto .

    $default  reduce using rule 20 (clase)


State 34

   19 clase: clase_vector .

    $default  reduce using rule 19 (clase)


State 35

   37 fn_name: TOK_FUNCTION modificadores_acceso . tipo_retorno TOK_IDENTIFICADOR

    TOK_NONE     shift, and go to state 73
    TOK_INT      shift, and go to state 24
    TOK_BOOLEAN  shift, and go to state 25
    '{'          shift, and go to state 27

    tipo          go to state 74
    clase_objeto  go to state 75
    tipo_retorno  go to state 76


State 36

    2 programa: TOK_MAIN '{' iniciar_codigo funciones inicio_main . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 38
    TOK_DISCARD        shift, and go to state 39
    TOK_ITSELF         shift, and go to state 40
    TOK_RETURN         shift, and go to state 41
    TOK_IF             shift, and go to state 42
    TOK_WHILE          shift, and go to state 43
    TOK_SCANF          shift, and go to state 44
    TOK_PRINTF         shift, and go to state 45

    sentencias           go to state 77
    sentencia            go to state 47
    sentencia_simple     go to state 48
    destruir_objeto      go to state 49
    bloque               go to state 50
    asignacion           go to state 51
    elemento_vector      go to state 52
    condicional          go to state 53
    if_exp               go to state 54
    if_exp_sentencias    go to state 55
    bucle                go to state 56
    while_exp            go to state 57
    while                go to state 58
    lectura              go to state 59
    escritura            go to state 60
    retorno_funcion      go to state 61
    identificador_clase  go to state 62


State 37

   32 funciones: funcion funciones .

    $default  reduce using rule 32 (funciones)


State 38

   59 sentencia_simple: TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   64 asignacion: TOK_IDENTIFICADOR . '=' exp
   67           | TOK_IDENTIFICADOR . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   69 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   99 identificador_clase: TOK_IDENTIFICADOR .

    '['  shift, and go to state 78
    '('  shift, and go to state 79
    '='  shift, and go to state 80

    $default  reduce using rule 99 (identificador_clase)


State 39

   61 destruir_objeto: TOK_DISCARD . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 81


State 40

  100 identificador_clase: TOK_ITSELF .

    $default  reduce using rule 100 (identificador_clase)


State 41

   80 retorno_funcion: TOK_RETURN . exp
   81                | TOK_RETURN . TOK_NONE

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_NONE              shift, and go to state 84
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 91
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 42

   72 if_exp: TOK_IF . '(' exp ')' '{'

    '('  shift, and go to state 97


State 43

   76 while: TOK_WHILE . '('

    '('  shift, and go to state 98


State 44

   77 lectura: TOK_SCANF . TOK_IDENTIFICADOR
   78        | TOK_SCANF . elemento_vector

    TOK_IDENTIFICADOR  shift, and go to state 99

    elemento_vector  go to state 100


State 45

   79 escritura: TOK_PRINTF . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 101
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 46

   34 funcion: fn_declaration sentencias . '}'

    '}'  shift, and go to state 102


State 47

   50 sentencias: sentencia .
   51           | sentencia . sentencias

    TOK_IDENTIFICADOR  shift, and go to state 38
    TOK_DISCARD        shift, and go to state 39
    TOK_ITSELF         shift, and go to state 40
    TOK_RETURN         shift, and go to state 41
    TOK_IF             shift, and go to state 42
    TOK_WHILE          shift, and go to state 43
    TOK_SCANF          shift, and go to state 44
    TOK_PRINTF         shift, and go to state 45

    $default  reduce using rule 50 (sentencias)

    sentencias           go to state 103
    sentencia            go to state 47
    sentencia_simple     go to state 48
    destruir_objeto      go to state 49
    bloque               go to state 50
    asignacion           go to state 51
    elemento_vector      go to state 52
    condicional          go to state 53
    if_exp               go to state 54
    if_exp_sentencias    go to state 55
    bucle                go to state 56
    while_exp            go to state 57
    while                go to state 58
    lectura              go to state 59
    escritura            go to state 60
    retorno_funcion      go to state 61
    identificador_clase  go to state 62


State 48

   52 sentencia: sentencia_simple . ';'

    ';'  shift, and go to state 104


State 49

   60 sentencia_simple: destruir_objeto .

    $default  reduce using rule 60 (sentencia_simple)


State 50

   53 sentencia: bloque .

    $default  reduce using rule 53 (sentencia)


State 51

   54 sentencia_simple: asignacion .

    $default  reduce using rule 54 (sentencia_simple)


State 52

   65 asignacion: elemento_vector . '=' exp
   66           | elemento_vector . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    '='  shift, and go to state 105


State 53

   62 bloque: condicional .

    $default  reduce using rule 62 (bloque)


State 54

   70 condicional: if_exp . sentencias '}'
   73 if_exp_sentencias: if_exp . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 38
    TOK_DISCARD        shift, and go to state 39
    TOK_ITSELF         shift, and go to state 40
    TOK_RETURN         shift, and go to state 41
    TOK_IF             shift, and go to state 42
    TOK_WHILE          shift, and go to state 43
    TOK_SCANF          shift, and go to state 44
    TOK_PRINTF         shift, and go to state 45

    sentencias           go to state 106
    sentencia            go to state 47
    sentencia_simple     go to state 48
    destruir_objeto      go to state 49
    bloque               go to state 50
    asignacion           go to state 51
    elemento_vector      go to state 52
    condicional          go to state 53
    if_exp               go to state 54
    if_exp_sentencias    go to state 55
    bucle                go to state 56
    while_exp            go to state 57
    while                go to state 58
    lectura              go to state 59
    escritura            go to state 60
    retorno_funcion      go to state 61
    identificador_clase  go to state 62


State 55

   71 condicional: if_exp_sentencias . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  shift, and go to state 107


State 56

   63 bloque: bucle .

    $default  reduce using rule 63 (bloque)


State 57

   74 bucle: while_exp . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 38
    TOK_DISCARD        shift, and go to state 39
    TOK_ITSELF         shift, and go to state 40
    TOK_RETURN         shift, and go to state 41
    TOK_IF             shift, and go to state 42
    TOK_WHILE          shift, and go to state 43
    TOK_SCANF          shift, and go to state 44
    TOK_PRINTF         shift, and go to state 45

    sentencias           go to state 108
    sentencia            go to state 47
    sentencia_simple     go to state 48
    destruir_objeto      go to state 49
    bloque               go to state 50
    asignacion           go to state 51
    elemento_vector      go to state 52
    condicional          go to state 53
    if_exp               go to state 54
    if_exp_sentencias    go to state 55
    bucle                go to state 56
    while_exp            go to state 57
    while                go to state 58
    lectura              go to state 59
    escritura            go to state 60
    retorno_funcion      go to state 61
    identificador_clase  go to state 62


State 58

   75 while_exp: while . exp ')' '{'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 109
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 59

   55 sentencia_simple: lectura .

    $default  reduce using rule 55 (sentencia_simple)


State 60

   56 sentencia_simple: escritura .

    $default  reduce using rule 56 (sentencia_simple)


State 61

   57 sentencia_simple: retorno_funcion .

    $default  reduce using rule 57 (sentencia_simple)


State 62

   58 sentencia_simple: identificador_clase . '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   68 asignacion: identificador_clase . '.' TOK_IDENTIFICADOR '=' exp

    '.'  shift, and go to state 110


State 63

   35 fn_declaration: fn_complete_name '{' . declaraciones_funcion

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    TOK_CLASS    reduce using rule 17 (modificadores_acceso)
    TOK_INT      reduce using rule 17 (modificadores_acceso)
    TOK_BOOLEAN  reduce using rule 17 (modificadores_acceso)
    TOK_ARRAY    reduce using rule 17 (modificadores_acceso)
    '{'          reduce using rule 17 (modificadores_acceso)
    $default     reduce using rule 49 (declaraciones_funcion)

    declaraciones          go to state 111
    declaracion            go to state 11
    modificadores_acceso   go to state 12
    declaraciones_funcion  go to state 112


State 64

   36 fn_complete_name: fn_name '(' . parametros_funcion ')'

    TOK_INT      shift, and go to state 24
    TOK_BOOLEAN  shift, and go to state 25
    '{'          shift, and go to state 27

    $default  reduce using rule 42 (parametros_funcion)

    tipo                go to state 113
    clase_objeto        go to state 114
    parametros_funcion  go to state 115
    parametro_funcion   go to state 116


State 65

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables . funciones inicio_main sentencias '}'

    TOK_FUNCTION  shift, and go to state 16

    $default  reduce using rule 33 (funciones)

    funciones         go to state 117
    funcion           go to state 18
    fn_declaration    go to state 19
    fn_complete_name  go to state 20
    fn_name           go to state 21


State 66

   28 clase_vector: TOK_ARRAY tipo . '[' TOK_CONSTANTE_ENTERA ']'
   29             | TOK_ARRAY tipo . '[' constante_entera ',' constante_entera ']'

    '['  shift, and go to state 118


State 67

   27 clase_objeto: '{' TOK_IDENTIFICADOR . '}'

    '}'  shift, and go to state 119


State 68

  116 identificador: TOK_IDENTIFICADOR .

    $default  reduce using rule 116 (identificador)


State 69

    8 declaracion: modificadores_acceso clase identificadores . ';'

    ';'  shift, and go to state 120


State 70

   30 identificadores: identificador .
   31                | identificador . ',' identificadores

    ','  shift, and go to state 121

    $default  reduce using rule 30 (identificadores)


State 71

    9 declaracion: modificadores_acceso declaracion_clase ';' .

    $default  reduce using rule 9 (declaracion)


State 72

   21 declaracion_clase: modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  shift, and go to state 122


State 73

   38 tipo_retorno: TOK_NONE .

    $default  reduce using rule 38 (tipo_retorno)


State 74

   39 tipo_retorno: tipo .

    $default  reduce using rule 39 (tipo_retorno)


State 75

   40 tipo_retorno: clase_objeto .

    $default  reduce using rule 40 (tipo_retorno)


State 76

   37 fn_name: TOK_FUNCTION modificadores_acceso tipo_retorno . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 123


State 77

    2 programa: TOK_MAIN '{' iniciar_codigo funciones inicio_main sentencias . '}'

    '}'  shift, and go to state 124


State 78

   69 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 125
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 79

   59 sentencia_simple: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    $default  reduce using rule 102 (lista_expresiones)

    elemento_vector      go to state 90
    exp                  go to state 126
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    lista_expresiones    go to state 127
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 80

   64 asignacion: TOK_IDENTIFICADOR '=' . exp
   67           | TOK_IDENTIFICADOR '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_INSTANCE_OF       shift, and go to state 128
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 129
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 81

   61 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR .

    $default  reduce using rule 61 (destruir_objeto)


State 82

   69 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   90 exp: TOK_IDENTIFICADOR .
   98 idf_llamada: TOK_IDENTIFICADOR .
   99 identificador_clase: TOK_IDENTIFICADOR .

    '['  shift, and go to state 78

    TOK_IDENTIFICADOR  reduce using rule 99 (identificador_clase)
    '('                reduce using rule 98 (idf_llamada)
    $default           reduce using rule 90 (exp)


State 83

  115 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce using rule 115 (constante_entera)


State 84

   81 retorno_funcion: TOK_RETURN TOK_NONE .

    $default  reduce using rule 81 (retorno_funcion)


State 85

  114 constante_logica: TOK_FALSE .

    $default  reduce using rule 114 (constante_logica)


State 86

  113 constante_logica: TOK_TRUE .

    $default  reduce using rule 113 (constante_logica)


State 87

   86 exp: '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 130
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 88

   89 exp: '!' . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 131
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 89

   92 exp: '(' . exp ')'
   93    | '(' . comparacion ')'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 132
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    comparacion          go to state 133
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 90

   94 exp: elemento_vector .

    $default  reduce using rule 94 (exp)


State 91

   80 retorno_funcion: TOK_RETURN exp .
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 80 (retorno_funcion)


State 92

   95 exp: idf_llamada . '(' lista_expresiones ')'

    '('  shift, and go to state 140


State 93

   96 exp: identificador_clase . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   97    | identificador_clase . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 141


State 94

   91 exp: constante .

    $default  reduce using rule 91 (exp)


State 95

  111 constante: constante_logica .

    $default  reduce using rule 111 (constante)


State 96

  112 constante: constante_entera .

    $default  reduce using rule 112 (constante)


State 97

   72 if_exp: TOK_IF '(' . exp ')' '{'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 142
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 98

   76 while: TOK_WHILE '(' .

    $default  reduce using rule 76 (while)


State 99

   69 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   77 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    '['  shift, and go to state 78

    $default  reduce using rule 77 (lectura)


State 100

   78 lectura: TOK_SCANF elemento_vector .

    $default  reduce using rule 78 (lectura)


State 101

   79 escritura: TOK_PRINTF exp .
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 79 (escritura)


State 102

   34 funcion: fn_declaration sentencias '}' .

    $default  reduce using rule 34 (funcion)


State 103

   51 sentencias: sentencia sentencias .

    $default  reduce using rule 51 (sentencias)


State 104

   52 sentencia: sentencia_simple ';' .

    $default  reduce using rule 52 (sentencia)


State 105

   65 asignacion: elemento_vector '=' . exp
   66           | elemento_vector '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_INSTANCE_OF       shift, and go to state 143
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 144
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 106

   70 condicional: if_exp sentencias . '}'
   73 if_exp_sentencias: if_exp sentencias . '}'

    '}'  shift, and go to state 145


State 107

   71 condicional: if_exp_sentencias TOK_ELSE . '{' sentencias '}'

    '{'  shift, and go to state 146


State 108

   74 bucle: while_exp sentencias . '}'

    '}'  shift, and go to state 147


State 109

   75 while_exp: while exp . ')' '{'
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139
    ')'      shift, and go to state 148


State 110

   58 sentencia_simple: identificador_clase '.' . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   68 asignacion: identificador_clase '.' . TOK_IDENTIFICADOR '=' exp

    TOK_IDENTIFICADOR  shift, and go to state 149


State 111

   48 declaraciones_funcion: declaraciones .

    $default  reduce using rule 48 (declaraciones_funcion)


State 112

   35 fn_declaration: fn_complete_name '{' declaraciones_funcion .

    $default  reduce using rule 35 (fn_declaration)


State 113

   45 parametro_funcion: tipo . idpf

    TOK_IDENTIFICADOR  shift, and go to state 150

    idpf  go to state 151


State 114

   46 parametro_funcion: clase_objeto . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 152


State 115

   36 fn_complete_name: fn_name '(' parametros_funcion . ')'

    ')'  shift, and go to state 153


State 116

   41 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ','  shift, and go to state 154

    $default  reduce using rule 44 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 155


State 117

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones . inicio_main sentencias '}'

    $default  reduce using rule 5 (inicio_main)

    inicio_main  go to state 156


State 118

   28 clase_vector: TOK_ARRAY tipo '[' . TOK_CONSTANTE_ENTERA ']'
   29             | TOK_ARRAY tipo '[' . constante_entera ',' constante_entera ']'

    TOK_CONSTANTE_ENTERA  shift, and go to state 157

    constante_entera  go to state 158


State 119

   27 clase_objeto: '{' TOK_IDENTIFICADOR '}' .

    $default  reduce using rule 27 (clase_objeto)


State 120

    8 declaracion: modificadores_acceso clase identificadores ';' .

    $default  reduce using rule 8 (declaracion)


State 121

   31 identificadores: identificador ',' . identificadores

    TOK_IDENTIFICADOR  shift, and go to state 68

    identificadores  go to state 159
    identificador    go to state 70


State 122

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . '{' declaraciones funciones '}'

    TOK_INHERITS  shift, and go to state 160
    '{'           shift, and go to state 161


State 123

   37 fn_name: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR .

    $default  reduce using rule 37 (fn_name)


State 124

    2 programa: TOK_MAIN '{' iniciar_codigo funciones inicio_main sentencias '}' .

    $default  reduce using rule 2 (programa)


State 125

   69 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139
    ']'      shift, and go to state 162


State 126

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  101 lista_expresiones: exp . resto_lista_expresiones

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139
    ','      shift, and go to state 163

    $default  reduce using rule 104 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 164


State 127

   59 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 165


State 128

   67 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  shift, and go to state 166


State 129

   64 asignacion: TOK_IDENTIFICADOR '=' exp .
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 64 (asignacion)


State 130

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   86    | '-' exp .
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    $default  reduce using rule 86 (exp)


State 131

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
   89    | '!' exp .

    $default  reduce using rule 89 (exp)


State 132

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
   92    | '(' exp . ')'
  105 comparacion: exp . TOK_IGUAL exp
  106            | exp . TOK_DISTINTO exp
  107            | exp . TOK_MENORIGUAL exp
  108            | exp . TOK_MAYORIGUAL exp
  109            | exp . '<' exp
  110            | exp . '>' exp

    TOK_IGUAL       shift, and go to state 167
    TOK_DISTINTO    shift, and go to state 168
    TOK_MENORIGUAL  shift, and go to state 169
    TOK_MAYORIGUAL  shift, and go to state 170
    TOK_OR          shift, and go to state 134
    TOK_AND         shift, and go to state 135
    '+'             shift, and go to state 136
    '-'             shift, and go to state 137
    '*'             shift, and go to state 138
    '/'             shift, and go to state 139
    ')'             shift, and go to state 171
    '<'             shift, and go to state 172
    '>'             shift, and go to state 173


State 133

   93 exp: '(' comparacion . ')'

    ')'  shift, and go to state 174


State 134

   88 exp: exp TOK_OR . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 175
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 135

   87 exp: exp TOK_AND . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 176
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 136

   82 exp: exp '+' . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 177
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 137

   83 exp: exp '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 178
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 138

   85 exp: exp '*' . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 179
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 139

   84 exp: exp '/' . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 180
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 140

   95 exp: idf_llamada '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    $default  reduce using rule 102 (lista_expresiones)

    elemento_vector      go to state 90
    exp                  go to state 126
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    lista_expresiones    go to state 181
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 141

   96 exp: identificador_clase TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   97    | identificador_clase TOK_IDENTIFICADOR .

    '('  shift, and go to state 182

    $default  reduce using rule 97 (exp)


State 142

   72 if_exp: TOK_IF '(' exp . ')' '{'
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139
    ')'      shift, and go to state 183


State 143

   66 asignacion: elemento_vector '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  shift, and go to state 184


State 144

   65 asignacion: elemento_vector '=' exp .
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 65 (asignacion)


State 145

   70 condicional: if_exp sentencias '}' .
   73 if_exp_sentencias: if_exp sentencias '}' .

    TOK_ELSE  reduce using rule 73 (if_exp_sentencias)
    $default  reduce using rule 70 (condicional)


State 146

   71 condicional: if_exp_sentencias TOK_ELSE '{' . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 38
    TOK_DISCARD        shift, and go to state 39
    TOK_ITSELF         shift, and go to state 40
    TOK_RETURN         shift, and go to state 41
    TOK_IF             shift, and go to state 42
    TOK_WHILE          shift, and go to state 43
    TOK_SCANF          shift, and go to state 44
    TOK_PRINTF         shift, and go to state 45

    sentencias           go to state 185
    sentencia            go to state 47
    sentencia_simple     go to state 48
    destruir_objeto      go to state 49
    bloque               go to state 50
    asignacion           go to state 51
    elemento_vector      go to state 52
    condicional          go to state 53
    if_exp               go to state 54
    if_exp_sentencias    go to state 55
    bucle                go to state 56
    while_exp            go to state 57
    while                go to state 58
    lectura              go to state 59
    escritura            go to state 60
    retorno_funcion      go to state 61
    identificador_clase  go to state 62


State 147

   74 bucle: while_exp sentencias '}' .

    $default  reduce using rule 74 (bucle)


State 148

   75 while_exp: while exp ')' . '{'

    '{'  shift, and go to state 186


State 149

   58 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   68 asignacion: identificador_clase '.' TOK_IDENTIFICADOR . '=' exp

    '('  shift, and go to state 187
    '='  shift, and go to state 188


State 150

   47 idpf: TOK_IDENTIFICADOR .

    $default  reduce using rule 47 (idpf)


State 151

   45 parametro_funcion: tipo idpf .

    $default  reduce using rule 45 (parametro_funcion)


State 152

   46 parametro_funcion: clase_objeto TOK_IDENTIFICADOR .

    $default  reduce using rule 46 (parametro_funcion)


State 153

   36 fn_complete_name: fn_name '(' parametros_funcion ')' .

    $default  reduce using rule 36 (fn_complete_name)


State 154

   43 resto_parametros_funcion: ',' . parametro_funcion resto_parametros_funcion

    TOK_INT      shift, and go to state 24
    TOK_BOOLEAN  shift, and go to state 25
    '{'          shift, and go to state 27

    tipo               go to state 113
    clase_objeto       go to state 114
    parametro_funcion  go to state 189


State 155

   41 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 41 (parametros_funcion)


State 156

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 38
    TOK_DISCARD        shift, and go to state 39
    TOK_ITSELF         shift, and go to state 40
    TOK_RETURN         shift, and go to state 41
    TOK_IF             shift, and go to state 42
    TOK_WHILE          shift, and go to state 43
    TOK_SCANF          shift, and go to state 44
    TOK_PRINTF         shift, and go to state 45

    sentencias           go to state 190
    sentencia            go to state 47
    sentencia_simple     go to state 48
    destruir_objeto      go to state 49
    bloque               go to state 50
    asignacion           go to state 51
    elemento_vector      go to state 52
    condicional          go to state 53
    if_exp               go to state 54
    if_exp_sentencias    go to state 55
    bucle                go to state 56
    while_exp            go to state 57
    while                go to state 58
    lectura              go to state 59
    escritura            go to state 60
    retorno_funcion      go to state 61
    identificador_clase  go to state 62


State 157

   28 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA . ']'
  115 constante_entera: TOK_CONSTANTE_ENTERA .

    ']'  shift, and go to state 191

    $default  reduce using rule 115 (constante_entera)


State 158

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera . ',' constante_entera ']'

    ','  shift, and go to state 192


State 159

   31 identificadores: identificador ',' identificadores .

    $default  reduce using rule 31 (identificadores)


State 160

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS . identificadores '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  shift, and go to state 68

    identificadores  go to state 193
    identificador    go to state 70


State 161

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' . declaraciones funciones '}'

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    $default  reduce using rule 17 (modificadores_acceso)

    declaraciones         go to state 194
    declaracion           go to state 11
    modificadores_acceso  go to state 12


State 162

   69 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce using rule 69 (elemento_vector)


State 163

  103 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 195
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 164

  101 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce using rule 101 (lista_expresiones)


State 165

   59 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 59 (sentencia_simple)


State 166

   67 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  shift, and go to state 196


State 167

  105 comparacion: exp TOK_IGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 197
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 168

  106 comparacion: exp TOK_DISTINTO . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 198
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 169

  107 comparacion: exp TOK_MENORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 199
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 170

  108 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 200
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 171

   92 exp: '(' exp ')' .

    $default  reduce using rule 92 (exp)


State 172

  109 comparacion: exp '<' . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 201
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 173

  110 comparacion: exp '>' . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 202
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 174

   93 exp: '(' comparacion ')' .

    $default  reduce using rule 93 (exp)


State 175

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
   88    | exp TOK_OR exp .

    TOK_AND  shift, and go to state 135
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 88 (exp)


State 176

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   87    | exp TOK_AND exp .
   88    | exp . TOK_OR exp

    $default  reduce using rule 87 (exp)


State 177

   82 exp: exp . '+' exp
   82    | exp '+' exp .
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 135
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 82 (exp)


State 178

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   83    | exp '-' exp .
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 135
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 83 (exp)


State 179

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   85    | exp '*' exp .
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    $default  reduce using rule 85 (exp)


State 180

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   84    | exp '/' exp .
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    $default  reduce using rule 84 (exp)


State 181

   95 exp: idf_llamada '(' lista_expresiones . ')'

    ')'  shift, and go to state 203


State 182

   96 exp: identificador_clase TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    $default  reduce using rule 102 (lista_expresiones)

    elemento_vector      go to state 90
    exp                  go to state 126
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    lista_expresiones    go to state 204
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 183

   72 if_exp: TOK_IF '(' exp ')' . '{'

    '{'  shift, and go to state 205


State 184

   66 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  shift, and go to state 206


State 185

   71 condicional: if_exp_sentencias TOK_ELSE '{' sentencias . '}'

    '}'  shift, and go to state 207


State 186

   75 while_exp: while exp ')' '{' .

    $default  reduce using rule 75 (while_exp)


State 187

   58 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    $default  reduce using rule 102 (lista_expresiones)

    elemento_vector      go to state 90
    exp                  go to state 126
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    lista_expresiones    go to state 208
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 188

   68 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    elemento_vector      go to state 90
    exp                  go to state 209
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 189

   43 resto_parametros_funcion: ',' parametro_funcion . resto_parametros_funcion

    ','  shift, and go to state 154

    $default  reduce using rule 44 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 210


State 190

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias . '}'

    '}'  shift, and go to state 211


State 191

   28 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']' .

    $default  reduce using rule 28 (clase_vector)


State 192

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' . constante_entera ']'

    TOK_CONSTANTE_ENTERA  shift, and go to state 83

    constante_entera  go to state 212


State 193

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores . '{' declaraciones funciones '}'

    '{'  shift, and go to state 213


State 194

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones . funciones '}'

    TOK_FUNCTION  shift, and go to state 16

    $default  reduce using rule 33 (funciones)

    funciones         go to state 214
    funcion           go to state 18
    fn_declaration    go to state 19
    fn_complete_name  go to state 20
    fn_name           go to state 21


State 195

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  103 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139
    ','      shift, and go to state 163

    $default  reduce using rule 104 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 215


State 196

   67 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    $default  reduce using rule 102 (lista_expresiones)

    elemento_vector      go to state 90
    exp                  go to state 126
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    lista_expresiones    go to state 216
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 197

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  105 comparacion: exp TOK_IGUAL exp .

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 105 (comparacion)


State 198

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  106 comparacion: exp TOK_DISTINTO exp .

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 106 (comparacion)


State 199

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  107 comparacion: exp TOK_MENORIGUAL exp .

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 107 (comparacion)


State 200

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  108 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 108 (comparacion)


State 201

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  109 comparacion: exp '<' exp .

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 109 (comparacion)


State 202

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  110 comparacion: exp '>' exp .

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 110 (comparacion)


State 203

   95 exp: idf_llamada '(' lista_expresiones ')' .

    $default  reduce using rule 95 (exp)


State 204

   96 exp: identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 217


State 205

   72 if_exp: TOK_IF '(' exp ')' '{' .

    $default  reduce using rule 72 (if_exp)


State 206

   66 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 82
    TOK_CONSTANTE_ENTERA  shift, and go to state 83
    TOK_ITSELF            shift, and go to state 40
    TOK_FALSE             shift, and go to state 85
    TOK_TRUE              shift, and go to state 86
    '-'                   shift, and go to state 87
    '!'                   shift, and go to state 88
    '('                   shift, and go to state 89

    $default  reduce using rule 102 (lista_expresiones)

    elemento_vector      go to state 90
    exp                  go to state 126
    idf_llamada          go to state 92
    identificador_clase  go to state 93
    lista_expresiones    go to state 218
    constante            go to state 94
    constante_logica     go to state 95
    constante_entera     go to state 96


State 207

   71 condicional: if_exp_sentencias TOK_ELSE '{' sentencias '}' .

    $default  reduce using rule 71 (condicional)


State 208

   58 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 219


State 209

   68 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' exp .
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 134
    TOK_AND  shift, and go to state 135
    '+'      shift, and go to state 136
    '-'      shift, and go to state 137
    '*'      shift, and go to state 138
    '/'      shift, and go to state 139

    $default  reduce using rule 68 (asignacion)


State 210

   43 resto_parametros_funcion: ',' parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 43 (resto_parametros_funcion)


State 211

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' .

    $default  reduce using rule 1 (programa)


State 212

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' constante_entera . ']'

    ']'  shift, and go to state 220


State 213

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' . declaraciones funciones '}'

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    $default  reduce using rule 17 (modificadores_acceso)

    declaraciones         go to state 221
    declaracion           go to state 11
    modificadores_acceso  go to state 12


State 214

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones . '}'

    '}'  shift, and go to state 222


State 215

  103 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce using rule 103 (resto_lista_expresiones)


State 216

   67 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 223


State 217

   96 exp: identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 96 (exp)


State 218

   66 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 224


State 219

   58 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 58 (sentencia_simple)


State 220

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' constante_entera ']' .

    $default  reduce using rule 29 (clase_vector)


State 221

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones . funciones '}'

    TOK_FUNCTION  shift, and go to state 16

    $default  reduce using rule 33 (funciones)

    funciones         go to state 225
    funcion           go to state 18
    fn_declaration    go to state 19
    fn_complete_name  go to state 20
    fn_name           go to state 21


State 222

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}' .

    $default  reduce using rule 22 (declaracion_clase)


State 223

   67 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 67 (asignacion)


State 224

   66 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 66 (asignacion)


State 225

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones . '}'

    '}'  shift, and go to state 226


State 226

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}' .

    $default  reduce using rule 21 (declaracion_clase)
