Terminales no usados en la gramática

   TOK_FLECHA
   TOK_ERROR
   TOK_FOR
   TOK_SWITCH
   TOK_CASE
   TOK_DEFAULT
   TOK_FLOAT
   TOK_MALLOC
   TOK_CPRINTF
   TOK_FREE
   TOK_SET
   TOK_OF
   TOK_UNION
   TOK_INTERSECTION
   TOK_ADD
   TOK_CLEAR
   TOK_SIZE
   TOK_CONTAINS
   TOK_CONSTANTE_REAL


Gramática

    0 $accept: programa $end

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}'
    2         | TOK_MAIN '{' iniciar_codigo funciones inicio_main sentencias '}'

    3 iniciar_codigo: %empty

    4 escribir_variables: %empty

    5 inicio_main: %empty

    6 declaraciones: declaracion declaraciones
    7              | declaracion

    8 declaracion: modificadores_acceso clase identificadores ';'
    9            | modificadores_acceso declaracion_clase ';'

   10 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE
   11                     | TOK_SECRET TOK_UNIQUE
   12                     | TOK_EXPOSED TOK_UNIQUE
   13                     | TOK_HIDDEN
   14                     | TOK_SECRET
   15                     | TOK_EXPOSED
   16                     | TOK_UNIQUE
   17                     | %empty

   18 clase: clase_escalar
   19      | clase_vector
   20      | clase_objeto

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

   23 modificadores_clase: %empty

   24 clase_escalar: tipo

   25 tipo: TOK_INT
   26     | TOK_BOOLEAN

   27 clase_objeto: '{' TOK_IDENTIFICADOR '}'

   28 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']'
   29             | TOK_ARRAY tipo '[' constante_entera ',' constante_entera ']'

   30 identificadores: identificador
   31                | identificador ',' identificadores

   32 funciones: funcion funciones
   33          | %empty

   34 funcion: fn_declaration sentencias '}'

   35 fn_declaration: fn_complete_name '{' declaraciones_funcion

   36 fn_complete_name: fn_name '(' parametros_funcion ')'

   37 fn_name: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR

   38 tipo_retorno: TOK_NONE
   39             | tipo
   40             | clase_objeto

   41 parametros_funcion: parametro_funcion resto_parametros_funcion
   42                   | %empty

   43 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   44                         | %empty

   45 parametro_funcion: tipo idpf
   46                  | clase_objeto TOK_IDENTIFICADOR

   47 idpf: TOK_IDENTIFICADOR

   48 declaraciones_funcion: declaraciones
   49                      | %empty

   50 sentencias: sentencia
   51           | sentencia sentencias

   52 sentencia: sentencia_simple ';'
   53          | bloque

   54 sentencia_simple: asignacion
   55                 | lectura
   56                 | escritura
   57                 | retorno_funcion
   58                 | identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   59                 | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   60                 | destruir_objeto

   61 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR

   62 bloque: condicional
   63       | bucle

   64 asignacion: TOK_IDENTIFICADOR '=' exp
   65           | elemento_vector '=' exp
   66           | elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   67           | TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   68           | identificador_clase '.' TOK_IDENTIFICADOR '=' exp

   69 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   70 condicional: if_exp sentencias '}'
   71            | if_exp_sentencias TOK_ELSE '{' sentencias '}'

   72 if_exp: TOK_IF '(' exp ')' '{'

   73 if_exp_sentencias: if_exp sentencias '}'

   74 bucle: while_exp sentencias '}'

   75 while_exp: while exp ')' '{'

   76 while: TOK_WHILE '('

   77 lectura: TOK_SCANF TOK_IDENTIFICADOR
   78        | TOK_SCANF elemento_vector

   79 escritura: TOK_PRINTF exp

   80 retorno_funcion: TOK_RETURN exp
   81                | TOK_RETURN TOK_NONE

   82 exp: exp '+' exp
   83    | exp '-' exp
   84    | exp '/' exp
   85    | exp '*' exp
   86    | '-' exp
   87    | exp TOK_AND exp
   88    | exp TOK_OR exp
   89    | '!' exp
   90    | TOK_IDENTIFICADOR
   91    | constante
   92    | '(' exp ')'
   93    | '(' comparacion ')'
   94    | elemento_vector
   95    | idf_llamada '(' lista_expresiones ')'
   96    | identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones ')'
   97    | identificador_clase TOK_IDENTIFICADOR

   98 idf_llamada: TOK_IDENTIFICADOR

   99 identificador_clase: TOK_IDENTIFICADOR
  100                    | TOK_ITSELF

  101 lista_expresiones: exp resto_lista_expresiones
  102                  | %empty

  103 resto_lista_expresiones: ',' exp resto_lista_expresiones
  104                        | %empty

  105 comparacion: exp TOK_IGUAL exp
  106            | exp TOK_DISTINTO exp
  107            | exp TOK_MENORIGUAL exp
  108            | exp TOK_MAYORIGUAL exp
  109            | exp '<' exp
  110            | exp '>' exp

  111 constante: constante_logica
  112          | constante_entera

  113 constante_logica: TOK_TRUE
  114                 | TOK_FALSE

  115 constante_entera: TOK_CONSTANTE_ENTERA

  116 identificador: TOK_IDENTIFICADOR


Terminales con las reglas donde aparecen

$end (0) 0
'!' (33) 89
'(' (40) 36 58 59 66 67 72 76 92 93 95 96
')' (41) 36 58 59 66 67 72 75 92 93 95 96
'*' (42) 85
'+' (43) 82
',' (44) 29 31 103
'-' (45) 83 86
'.' (46) 58 68
'/' (47) 84
';' (59) 8 9 43 52
'<' (60) 109
'=' (61) 64 65 66 67 68
'>' (62) 110
'[' (91) 28 29 69
']' (93) 28 29 69
'{' (123) 1 2 21 22 27 35 71 72 75
'}' (125) 1 2 21 22 27 34 70 71 73 74
error (256)
TOK_IDENTIFICADOR (258) 21 22 27 37 46 47 58 59 61 64 66 67 68 69 77
    90 96 97 98 99 116
TOK_CONSTANTE_ENTERA (259) 28 115
TOK_NONE (260) 38 81
TOK_CLASS (261) 21 22
TOK_INHERITS (262) 21
TOK_INSTANCE_OF (263) 66 67
TOK_DISCARD (264) 61
TOK_ITSELF (265) 100
TOK_FLECHA (266)
TOK_HIDDEN (267) 10 13
TOK_SECRET (268) 11 14
TOK_EXPOSED (269) 12 15
TOK_UNIQUE (270) 10 11 12 16
TOK_FUNCTION (271) 37
TOK_RETURN (272) 80 81
TOK_MAIN (273) 1 2
TOK_INT (274) 25
TOK_BOOLEAN (275) 26
TOK_ARRAY (276) 28 29
TOK_IF (277) 72
TOK_ELSE (278) 71
TOK_WHILE (279) 76
TOK_SCANF (280) 77 78
TOK_PRINTF (281) 79
TOK_IGUAL (282) 105
TOK_DISTINTO (283) 106
TOK_MENORIGUAL (284) 107
TOK_MAYORIGUAL (285) 108
TOK_OR (286) 88
TOK_AND (287) 87
TOK_FALSE (288) 114
TOK_TRUE (289) 113
TOK_ERROR (290)
TOK_FOR (291)
TOK_SWITCH (292)
TOK_CASE (293)
TOK_DEFAULT (294)
TOK_FLOAT (295)
TOK_MALLOC (296)
TOK_CPRINTF (297)
TOK_FREE (298)
TOK_SET (299)
TOK_OF (300)
TOK_UNION (301)
TOK_INTERSECTION (302)
TOK_ADD (303)
TOK_CLEAR (304)
TOK_SIZE (305)
TOK_CONTAINS (306)
TOK_CONSTANTE_REAL (307)
NEG (308)


No terminales con las reglas donde aparecen

$accept (71)
    en la izquierda: 0
programa (72)
    en la izquierda: 1 2, en la derecha: 0
iniciar_codigo (73)
    en la izquierda: 3, en la derecha: 1 2
escribir_variables (74)
    en la izquierda: 4, en la derecha: 1
inicio_main (75)
    en la izquierda: 5, en la derecha: 1 2
declaraciones (76)
    en la izquierda: 6 7, en la derecha: 1 6 21 22 48
declaracion (77)
    en la izquierda: 8 9, en la derecha: 6 7
modificadores_acceso (78)
    en la izquierda: 10 11 12 13 14 15 16 17, en la derecha: 8 9 37
clase (79)
    en la izquierda: 18 19 20, en la derecha: 8
declaracion_clase (80)
    en la izquierda: 21 22, en la derecha: 9
modificadores_clase (81)
    en la izquierda: 23, en la derecha: 21 22
clase_escalar (82)
    en la izquierda: 24, en la derecha: 18
tipo (83)
    en la izquierda: 25 26, en la derecha: 24 28 29 39 45
clase_objeto (84)
    en la izquierda: 27, en la derecha: 20 40 46
clase_vector (85)
    en la izquierda: 28 29, en la derecha: 19
identificadores (86)
    en la izquierda: 30 31, en la derecha: 8 21 31
funciones (87)
    en la izquierda: 32 33, en la derecha: 1 2 21 22 32
funcion (88)
    en la izquierda: 34, en la derecha: 32
fn_declaration (89)
    en la izquierda: 35, en la derecha: 34
fn_complete_name (90)
    en la izquierda: 36, en la derecha: 35
fn_name (91)
    en la izquierda: 37, en la derecha: 36
tipo_retorno (92)
    en la izquierda: 38 39 40, en la derecha: 37
parametros_funcion (93)
    en la izquierda: 41 42, en la derecha: 36
resto_parametros_funcion (94)
    en la izquierda: 43 44, en la derecha: 41 43
parametro_funcion (95)
    en la izquierda: 45 46, en la derecha: 41 43
idpf (96)
    en la izquierda: 47, en la derecha: 45
declaraciones_funcion (97)
    en la izquierda: 48 49, en la derecha: 35
sentencias (98)
    en la izquierda: 50 51, en la derecha: 1 2 34 51 70 71 73 74
sentencia (99)
    en la izquierda: 52 53, en la derecha: 50 51
sentencia_simple (100)
    en la izquierda: 54 55 56 57 58 59 60, en la derecha: 52
destruir_objeto (101)
    en la izquierda: 61, en la derecha: 60
bloque (102)
    en la izquierda: 62 63, en la derecha: 53
asignacion (103)
    en la izquierda: 64 65 66 67 68, en la derecha: 54
elemento_vector (104)
    en la izquierda: 69, en la derecha: 65 66 78 94
condicional (105)
    en la izquierda: 70 71, en la derecha: 62
if_exp (106)
    en la izquierda: 72, en la derecha: 70 73
if_exp_sentencias (107)
    en la izquierda: 73, en la derecha: 71
bucle (108)
    en la izquierda: 74, en la derecha: 63
while_exp (109)
    en la izquierda: 75, en la derecha: 74
while (110)
    en la izquierda: 76, en la derecha: 75
lectura (111)
    en la izquierda: 77 78, en la derecha: 55
escritura (112)
    en la izquierda: 79, en la derecha: 56
retorno_funcion (113)
    en la izquierda: 80 81, en la derecha: 57
exp (114)
    en la izquierda: 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97,
    en la derecha: 64 65 68 69 72 75 79 80 82 83 84 85 86 87 88 89
    92 101 103 105 106 107 108 109 110
idf_llamada (115)
    en la izquierda: 98, en la derecha: 95
identificador_clase (116)
    en la izquierda: 99 100, en la derecha: 58 68 96 97
lista_expresiones (117)
    en la izquierda: 101 102, en la derecha: 58 59 66 67 95 96
resto_lista_expresiones (118)
    en la izquierda: 103 104, en la derecha: 101 103
comparacion (119)
    en la izquierda: 105 106 107 108 109 110, en la derecha: 93
constante (120)
    en la izquierda: 111 112, en la derecha: 91
constante_logica (121)
    en la izquierda: 113 114, en la derecha: 111
constante_entera (122)
    en la izquierda: 115, en la derecha: 29 112
identificador (123)
    en la izquierda: 116, en la derecha: 30 31


Estado 0

    0 $accept: . programa $end

    TOK_MAIN  desplazar e ir al estado 1

    programa  ir al estado 2


Estado 1

    1 programa: TOK_MAIN . '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}'
    2         | TOK_MAIN . '{' iniciar_codigo funciones inicio_main sentencias '}'

    '{'  desplazar e ir al estado 3


Estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 4


Estado 3

    1 programa: TOK_MAIN '{' . declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}'
    2         | TOK_MAIN '{' . iniciar_codigo funciones inicio_main sentencias '}'

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    TOK_CLASS    reduce usando la regla 17 (modificadores_acceso)
    TOK_INT      reduce usando la regla 17 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 17 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 17 (modificadores_acceso)
    '{'          reduce usando la regla 17 (modificadores_acceso)
    $default     reduce usando la regla 3 (iniciar_codigo)

    iniciar_codigo        ir al estado 9
    declaraciones         ir al estado 10
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12


Estado 4

    0 $accept: programa $end .

    $default  aceptar


Estado 5

   10 modificadores_acceso: TOK_HIDDEN . TOK_UNIQUE
   13                     | TOK_HIDDEN .

    TOK_UNIQUE  desplazar e ir al estado 13

    $default  reduce usando la regla 13 (modificadores_acceso)


Estado 6

   11 modificadores_acceso: TOK_SECRET . TOK_UNIQUE
   14                     | TOK_SECRET .

    TOK_UNIQUE  desplazar e ir al estado 14

    $default  reduce usando la regla 14 (modificadores_acceso)


Estado 7

   12 modificadores_acceso: TOK_EXPOSED . TOK_UNIQUE
   15                     | TOK_EXPOSED .

    TOK_UNIQUE  desplazar e ir al estado 15

    $default  reduce usando la regla 15 (modificadores_acceso)


Estado 8

   16 modificadores_acceso: TOK_UNIQUE .

    $default  reduce usando la regla 16 (modificadores_acceso)


Estado 9

    2 programa: TOK_MAIN '{' iniciar_codigo . funciones inicio_main sentencias '}'

    TOK_FUNCTION  desplazar e ir al estado 16

    $default  reduce usando la regla 33 (funciones)

    funciones         ir al estado 17
    funcion           ir al estado 18
    fn_declaration    ir al estado 19
    fn_complete_name  ir al estado 20
    fn_name           ir al estado 21


Estado 10

    1 programa: TOK_MAIN '{' declaraciones . iniciar_codigo escribir_variables funciones inicio_main sentencias '}'

    $default  reduce usando la regla 3 (iniciar_codigo)

    iniciar_codigo  ir al estado 22


Estado 11

    6 declaraciones: declaracion . declaraciones
    7              | declaracion .

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    TOK_CLASS    reduce usando la regla 17 (modificadores_acceso)
    TOK_INT      reduce usando la regla 17 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 17 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 17 (modificadores_acceso)
    '{'          reduce usando la regla 17 (modificadores_acceso)
    $default     reduce usando la regla 7 (declaraciones)

    declaraciones         ir al estado 23
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12


Estado 12

    8 declaracion: modificadores_acceso . clase identificadores ';'
    9            | modificadores_acceso . declaracion_clase ';'

    TOK_INT      desplazar e ir al estado 24
    TOK_BOOLEAN  desplazar e ir al estado 25
    TOK_ARRAY    desplazar e ir al estado 26
    '{'          desplazar e ir al estado 27

    $default  reduce usando la regla 23 (modificadores_clase)

    clase                ir al estado 28
    declaracion_clase    ir al estado 29
    modificadores_clase  ir al estado 30
    clase_escalar        ir al estado 31
    tipo                 ir al estado 32
    clase_objeto         ir al estado 33
    clase_vector         ir al estado 34


Estado 13

   10 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE .

    $default  reduce usando la regla 10 (modificadores_acceso)


Estado 14

   11 modificadores_acceso: TOK_SECRET TOK_UNIQUE .

    $default  reduce usando la regla 11 (modificadores_acceso)


Estado 15

   12 modificadores_acceso: TOK_EXPOSED TOK_UNIQUE .

    $default  reduce usando la regla 12 (modificadores_acceso)


Estado 16

   37 fn_name: TOK_FUNCTION . modificadores_acceso tipo_retorno TOK_IDENTIFICADOR

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    $default  reduce usando la regla 17 (modificadores_acceso)

    modificadores_acceso  ir al estado 35


Estado 17

    2 programa: TOK_MAIN '{' iniciar_codigo funciones . inicio_main sentencias '}'

    $default  reduce usando la regla 5 (inicio_main)

    inicio_main  ir al estado 36


Estado 18

   32 funciones: funcion . funciones

    TOK_FUNCTION  desplazar e ir al estado 16

    $default  reduce usando la regla 33 (funciones)

    funciones         ir al estado 37
    funcion           ir al estado 18
    fn_declaration    ir al estado 19
    fn_complete_name  ir al estado 20
    fn_name           ir al estado 21


Estado 19

   34 funcion: fn_declaration . sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 38
    TOK_DISCARD        desplazar e ir al estado 39
    TOK_ITSELF         desplazar e ir al estado 40
    TOK_RETURN         desplazar e ir al estado 41
    TOK_IF             desplazar e ir al estado 42
    TOK_WHILE          desplazar e ir al estado 43
    TOK_SCANF          desplazar e ir al estado 44
    TOK_PRINTF         desplazar e ir al estado 45

    sentencias           ir al estado 46
    sentencia            ir al estado 47
    sentencia_simple     ir al estado 48
    destruir_objeto      ir al estado 49
    bloque               ir al estado 50
    asignacion           ir al estado 51
    elemento_vector      ir al estado 52
    condicional          ir al estado 53
    if_exp               ir al estado 54
    if_exp_sentencias    ir al estado 55
    bucle                ir al estado 56
    while_exp            ir al estado 57
    while                ir al estado 58
    lectura              ir al estado 59
    escritura            ir al estado 60
    retorno_funcion      ir al estado 61
    identificador_clase  ir al estado 62


Estado 20

   35 fn_declaration: fn_complete_name . '{' declaraciones_funcion

    '{'  desplazar e ir al estado 63


Estado 21

   36 fn_complete_name: fn_name . '(' parametros_funcion ')'

    '('  desplazar e ir al estado 64


Estado 22

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo . escribir_variables funciones inicio_main sentencias '}'

    $default  reduce usando la regla 4 (escribir_variables)

    escribir_variables  ir al estado 65


Estado 23

    6 declaraciones: declaracion declaraciones .

    $default  reduce usando la regla 6 (declaraciones)


Estado 24

   25 tipo: TOK_INT .

    $default  reduce usando la regla 25 (tipo)


Estado 25

   26 tipo: TOK_BOOLEAN .

    $default  reduce usando la regla 26 (tipo)


Estado 26

   28 clase_vector: TOK_ARRAY . tipo '[' TOK_CONSTANTE_ENTERA ']'
   29             | TOK_ARRAY . tipo '[' constante_entera ',' constante_entera ']'

    TOK_INT      desplazar e ir al estado 24
    TOK_BOOLEAN  desplazar e ir al estado 25

    tipo  ir al estado 66


Estado 27

   27 clase_objeto: '{' . TOK_IDENTIFICADOR '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 67


Estado 28

    8 declaracion: modificadores_acceso clase . identificadores ';'

    TOK_IDENTIFICADOR  desplazar e ir al estado 68

    identificadores  ir al estado 69
    identificador    ir al estado 70


Estado 29

    9 declaracion: modificadores_acceso declaracion_clase . ';'

    ';'  desplazar e ir al estado 71


Estado 30

   21 declaracion_clase: modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_CLASS  desplazar e ir al estado 72


Estado 31

   18 clase: clase_escalar .

    $default  reduce usando la regla 18 (clase)


Estado 32

   24 clase_escalar: tipo .

    $default  reduce usando la regla 24 (clase_escalar)


Estado 33

   20 clase: clase_objeto .

    $default  reduce usando la regla 20 (clase)


Estado 34

   19 clase: clase_vector .

    $default  reduce usando la regla 19 (clase)


Estado 35

   37 fn_name: TOK_FUNCTION modificadores_acceso . tipo_retorno TOK_IDENTIFICADOR

    TOK_NONE     desplazar e ir al estado 73
    TOK_INT      desplazar e ir al estado 24
    TOK_BOOLEAN  desplazar e ir al estado 25
    '{'          desplazar e ir al estado 27

    tipo          ir al estado 74
    clase_objeto  ir al estado 75
    tipo_retorno  ir al estado 76


Estado 36

    2 programa: TOK_MAIN '{' iniciar_codigo funciones inicio_main . sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 38
    TOK_DISCARD        desplazar e ir al estado 39
    TOK_ITSELF         desplazar e ir al estado 40
    TOK_RETURN         desplazar e ir al estado 41
    TOK_IF             desplazar e ir al estado 42
    TOK_WHILE          desplazar e ir al estado 43
    TOK_SCANF          desplazar e ir al estado 44
    TOK_PRINTF         desplazar e ir al estado 45

    sentencias           ir al estado 77
    sentencia            ir al estado 47
    sentencia_simple     ir al estado 48
    destruir_objeto      ir al estado 49
    bloque               ir al estado 50
    asignacion           ir al estado 51
    elemento_vector      ir al estado 52
    condicional          ir al estado 53
    if_exp               ir al estado 54
    if_exp_sentencias    ir al estado 55
    bucle                ir al estado 56
    while_exp            ir al estado 57
    while                ir al estado 58
    lectura              ir al estado 59
    escritura            ir al estado 60
    retorno_funcion      ir al estado 61
    identificador_clase  ir al estado 62


Estado 37

   32 funciones: funcion funciones .

    $default  reduce usando la regla 32 (funciones)


Estado 38

   59 sentencia_simple: TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   64 asignacion: TOK_IDENTIFICADOR . '=' exp
   67           | TOK_IDENTIFICADOR . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   69 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   99 identificador_clase: TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 78
    '('  desplazar e ir al estado 79
    '='  desplazar e ir al estado 80

    $default  reduce usando la regla 99 (identificador_clase)


Estado 39

   61 destruir_objeto: TOK_DISCARD . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 81


Estado 40

  100 identificador_clase: TOK_ITSELF .

    $default  reduce usando la regla 100 (identificador_clase)


Estado 41

   80 retorno_funcion: TOK_RETURN . exp
   81                | TOK_RETURN . TOK_NONE

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_NONE              desplazar e ir al estado 84
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 91
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 42

   72 if_exp: TOK_IF . '(' exp ')' '{'

    '('  desplazar e ir al estado 97


Estado 43

   76 while: TOK_WHILE . '('

    '('  desplazar e ir al estado 98


Estado 44

   77 lectura: TOK_SCANF . TOK_IDENTIFICADOR
   78        | TOK_SCANF . elemento_vector

    TOK_IDENTIFICADOR  desplazar e ir al estado 99

    elemento_vector  ir al estado 100


Estado 45

   79 escritura: TOK_PRINTF . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 101
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 46

   34 funcion: fn_declaration sentencias . '}'

    '}'  desplazar e ir al estado 102


Estado 47

   50 sentencias: sentencia .
   51           | sentencia . sentencias

    TOK_IDENTIFICADOR  desplazar e ir al estado 38
    TOK_DISCARD        desplazar e ir al estado 39
    TOK_ITSELF         desplazar e ir al estado 40
    TOK_RETURN         desplazar e ir al estado 41
    TOK_IF             desplazar e ir al estado 42
    TOK_WHILE          desplazar e ir al estado 43
    TOK_SCANF          desplazar e ir al estado 44
    TOK_PRINTF         desplazar e ir al estado 45

    $default  reduce usando la regla 50 (sentencias)

    sentencias           ir al estado 103
    sentencia            ir al estado 47
    sentencia_simple     ir al estado 48
    destruir_objeto      ir al estado 49
    bloque               ir al estado 50
    asignacion           ir al estado 51
    elemento_vector      ir al estado 52
    condicional          ir al estado 53
    if_exp               ir al estado 54
    if_exp_sentencias    ir al estado 55
    bucle                ir al estado 56
    while_exp            ir al estado 57
    while                ir al estado 58
    lectura              ir al estado 59
    escritura            ir al estado 60
    retorno_funcion      ir al estado 61
    identificador_clase  ir al estado 62


Estado 48

   52 sentencia: sentencia_simple . ';'

    ';'  desplazar e ir al estado 104


Estado 49

   60 sentencia_simple: destruir_objeto .

    $default  reduce usando la regla 60 (sentencia_simple)


Estado 50

   53 sentencia: bloque .

    $default  reduce usando la regla 53 (sentencia)


Estado 51

   54 sentencia_simple: asignacion .

    $default  reduce usando la regla 54 (sentencia_simple)


Estado 52

   65 asignacion: elemento_vector . '=' exp
   66           | elemento_vector . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    '='  desplazar e ir al estado 105


Estado 53

   62 bloque: condicional .

    $default  reduce usando la regla 62 (bloque)


Estado 54

   70 condicional: if_exp . sentencias '}'
   73 if_exp_sentencias: if_exp . sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 38
    TOK_DISCARD        desplazar e ir al estado 39
    TOK_ITSELF         desplazar e ir al estado 40
    TOK_RETURN         desplazar e ir al estado 41
    TOK_IF             desplazar e ir al estado 42
    TOK_WHILE          desplazar e ir al estado 43
    TOK_SCANF          desplazar e ir al estado 44
    TOK_PRINTF         desplazar e ir al estado 45

    sentencias           ir al estado 106
    sentencia            ir al estado 47
    sentencia_simple     ir al estado 48
    destruir_objeto      ir al estado 49
    bloque               ir al estado 50
    asignacion           ir al estado 51
    elemento_vector      ir al estado 52
    condicional          ir al estado 53
    if_exp               ir al estado 54
    if_exp_sentencias    ir al estado 55
    bucle                ir al estado 56
    while_exp            ir al estado 57
    while                ir al estado 58
    lectura              ir al estado 59
    escritura            ir al estado 60
    retorno_funcion      ir al estado 61
    identificador_clase  ir al estado 62


Estado 55

   71 condicional: if_exp_sentencias . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  desplazar e ir al estado 107


Estado 56

   63 bloque: bucle .

    $default  reduce usando la regla 63 (bloque)


Estado 57

   74 bucle: while_exp . sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 38
    TOK_DISCARD        desplazar e ir al estado 39
    TOK_ITSELF         desplazar e ir al estado 40
    TOK_RETURN         desplazar e ir al estado 41
    TOK_IF             desplazar e ir al estado 42
    TOK_WHILE          desplazar e ir al estado 43
    TOK_SCANF          desplazar e ir al estado 44
    TOK_PRINTF         desplazar e ir al estado 45

    sentencias           ir al estado 108
    sentencia            ir al estado 47
    sentencia_simple     ir al estado 48
    destruir_objeto      ir al estado 49
    bloque               ir al estado 50
    asignacion           ir al estado 51
    elemento_vector      ir al estado 52
    condicional          ir al estado 53
    if_exp               ir al estado 54
    if_exp_sentencias    ir al estado 55
    bucle                ir al estado 56
    while_exp            ir al estado 57
    while                ir al estado 58
    lectura              ir al estado 59
    escritura            ir al estado 60
    retorno_funcion      ir al estado 61
    identificador_clase  ir al estado 62


Estado 58

   75 while_exp: while . exp ')' '{'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 109
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 59

   55 sentencia_simple: lectura .

    $default  reduce usando la regla 55 (sentencia_simple)


Estado 60

   56 sentencia_simple: escritura .

    $default  reduce usando la regla 56 (sentencia_simple)


Estado 61

   57 sentencia_simple: retorno_funcion .

    $default  reduce usando la regla 57 (sentencia_simple)


Estado 62

   58 sentencia_simple: identificador_clase . '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   68 asignacion: identificador_clase . '.' TOK_IDENTIFICADOR '=' exp

    '.'  desplazar e ir al estado 110


Estado 63

   35 fn_declaration: fn_complete_name '{' . declaraciones_funcion

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    TOK_CLASS    reduce usando la regla 17 (modificadores_acceso)
    TOK_INT      reduce usando la regla 17 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 17 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 17 (modificadores_acceso)
    '{'          reduce usando la regla 17 (modificadores_acceso)
    $default     reduce usando la regla 49 (declaraciones_funcion)

    declaraciones          ir al estado 111
    declaracion            ir al estado 11
    modificadores_acceso   ir al estado 12
    declaraciones_funcion  ir al estado 112


Estado 64

   36 fn_complete_name: fn_name '(' . parametros_funcion ')'

    TOK_INT      desplazar e ir al estado 24
    TOK_BOOLEAN  desplazar e ir al estado 25
    '{'          desplazar e ir al estado 27

    $default  reduce usando la regla 42 (parametros_funcion)

    tipo                ir al estado 113
    clase_objeto        ir al estado 114
    parametros_funcion  ir al estado 115
    parametro_funcion   ir al estado 116


Estado 65

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables . funciones inicio_main sentencias '}'

    TOK_FUNCTION  desplazar e ir al estado 16

    $default  reduce usando la regla 33 (funciones)

    funciones         ir al estado 117
    funcion           ir al estado 18
    fn_declaration    ir al estado 19
    fn_complete_name  ir al estado 20
    fn_name           ir al estado 21


Estado 66

   28 clase_vector: TOK_ARRAY tipo . '[' TOK_CONSTANTE_ENTERA ']'
   29             | TOK_ARRAY tipo . '[' constante_entera ',' constante_entera ']'

    '['  desplazar e ir al estado 118


Estado 67

   27 clase_objeto: '{' TOK_IDENTIFICADOR . '}'

    '}'  desplazar e ir al estado 119


Estado 68

  116 identificador: TOK_IDENTIFICADOR .

    $default  reduce usando la regla 116 (identificador)


Estado 69

    8 declaracion: modificadores_acceso clase identificadores . ';'

    ';'  desplazar e ir al estado 120


Estado 70

   30 identificadores: identificador .
   31                | identificador . ',' identificadores

    ','  desplazar e ir al estado 121

    $default  reduce usando la regla 30 (identificadores)


Estado 71

    9 declaracion: modificadores_acceso declaracion_clase ';' .

    $default  reduce usando la regla 9 (declaracion)


Estado 72

   21 declaracion_clase: modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 122


Estado 73

   38 tipo_retorno: TOK_NONE .

    $default  reduce usando la regla 38 (tipo_retorno)


Estado 74

   39 tipo_retorno: tipo .

    $default  reduce usando la regla 39 (tipo_retorno)


Estado 75

   40 tipo_retorno: clase_objeto .

    $default  reduce usando la regla 40 (tipo_retorno)


Estado 76

   37 fn_name: TOK_FUNCTION modificadores_acceso tipo_retorno . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 123


Estado 77

    2 programa: TOK_MAIN '{' iniciar_codigo funciones inicio_main sentencias . '}'

    '}'  desplazar e ir al estado 124


Estado 78

   69 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 125
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 79

   59 sentencia_simple: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    $default  reduce usando la regla 102 (lista_expresiones)

    elemento_vector      ir al estado 90
    exp                  ir al estado 126
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    lista_expresiones    ir al estado 127
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 80

   64 asignacion: TOK_IDENTIFICADOR '=' . exp
   67           | TOK_IDENTIFICADOR '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_INSTANCE_OF       desplazar e ir al estado 128
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 129
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 81

   61 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR .

    $default  reduce usando la regla 61 (destruir_objeto)


Estado 82

   69 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   90 exp: TOK_IDENTIFICADOR .
   98 idf_llamada: TOK_IDENTIFICADOR .
   99 identificador_clase: TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 78

    TOK_IDENTIFICADOR  reduce usando la regla 99 (identificador_clase)
    '('                reduce usando la regla 98 (idf_llamada)
    $default           reduce usando la regla 90 (exp)


Estado 83

  115 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce usando la regla 115 (constante_entera)


Estado 84

   81 retorno_funcion: TOK_RETURN TOK_NONE .

    $default  reduce usando la regla 81 (retorno_funcion)


Estado 85

  114 constante_logica: TOK_FALSE .

    $default  reduce usando la regla 114 (constante_logica)


Estado 86

  113 constante_logica: TOK_TRUE .

    $default  reduce usando la regla 113 (constante_logica)


Estado 87

   86 exp: '-' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 130
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 88

   89 exp: '!' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 131
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 89

   92 exp: '(' . exp ')'
   93    | '(' . comparacion ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 132
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    comparacion          ir al estado 133
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 90

   94 exp: elemento_vector .

    $default  reduce usando la regla 94 (exp)


Estado 91

   80 retorno_funcion: TOK_RETURN exp .
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 80 (retorno_funcion)


Estado 92

   95 exp: idf_llamada . '(' lista_expresiones ')'

    '('  desplazar e ir al estado 140


Estado 93

   96 exp: identificador_clase . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   97    | identificador_clase . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 141


Estado 94

   91 exp: constante .

    $default  reduce usando la regla 91 (exp)


Estado 95

  111 constante: constante_logica .

    $default  reduce usando la regla 111 (constante)


Estado 96

  112 constante: constante_entera .

    $default  reduce usando la regla 112 (constante)


Estado 97

   72 if_exp: TOK_IF '(' . exp ')' '{'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 142
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 98

   76 while: TOK_WHILE '(' .

    $default  reduce usando la regla 76 (while)


Estado 99

   69 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   77 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 78

    $default  reduce usando la regla 77 (lectura)


Estado 100

   78 lectura: TOK_SCANF elemento_vector .

    $default  reduce usando la regla 78 (lectura)


Estado 101

   79 escritura: TOK_PRINTF exp .
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 79 (escritura)


Estado 102

   34 funcion: fn_declaration sentencias '}' .

    $default  reduce usando la regla 34 (funcion)


Estado 103

   51 sentencias: sentencia sentencias .

    $default  reduce usando la regla 51 (sentencias)


Estado 104

   52 sentencia: sentencia_simple ';' .

    $default  reduce usando la regla 52 (sentencia)


Estado 105

   65 asignacion: elemento_vector '=' . exp
   66           | elemento_vector '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_INSTANCE_OF       desplazar e ir al estado 143
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 144
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 106

   70 condicional: if_exp sentencias . '}'
   73 if_exp_sentencias: if_exp sentencias . '}'

    '}'  desplazar e ir al estado 145


Estado 107

   71 condicional: if_exp_sentencias TOK_ELSE . '{' sentencias '}'

    '{'  desplazar e ir al estado 146


Estado 108

   74 bucle: while_exp sentencias . '}'

    '}'  desplazar e ir al estado 147


Estado 109

   75 while_exp: while exp . ')' '{'
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139
    ')'      desplazar e ir al estado 148


Estado 110

   58 sentencia_simple: identificador_clase '.' . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   68 asignacion: identificador_clase '.' . TOK_IDENTIFICADOR '=' exp

    TOK_IDENTIFICADOR  desplazar e ir al estado 149


Estado 111

   48 declaraciones_funcion: declaraciones .

    $default  reduce usando la regla 48 (declaraciones_funcion)


Estado 112

   35 fn_declaration: fn_complete_name '{' declaraciones_funcion .

    $default  reduce usando la regla 35 (fn_declaration)


Estado 113

   45 parametro_funcion: tipo . idpf

    TOK_IDENTIFICADOR  desplazar e ir al estado 150

    idpf  ir al estado 151


Estado 114

   46 parametro_funcion: clase_objeto . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 152


Estado 115

   36 fn_complete_name: fn_name '(' parametros_funcion . ')'

    ')'  desplazar e ir al estado 153


Estado 116

   41 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  desplazar e ir al estado 154

    $default  reduce usando la regla 44 (resto_parametros_funcion)

    resto_parametros_funcion  ir al estado 155


Estado 117

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones . inicio_main sentencias '}'

    $default  reduce usando la regla 5 (inicio_main)

    inicio_main  ir al estado 156


Estado 118

   28 clase_vector: TOK_ARRAY tipo '[' . TOK_CONSTANTE_ENTERA ']'
   29             | TOK_ARRAY tipo '[' . constante_entera ',' constante_entera ']'

    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 157

    constante_entera  ir al estado 158


Estado 119

   27 clase_objeto: '{' TOK_IDENTIFICADOR '}' .

    $default  reduce usando la regla 27 (clase_objeto)


Estado 120

    8 declaracion: modificadores_acceso clase identificadores ';' .

    $default  reduce usando la regla 8 (declaracion)


Estado 121

   31 identificadores: identificador ',' . identificadores

    TOK_IDENTIFICADOR  desplazar e ir al estado 68

    identificadores  ir al estado 159
    identificador    ir al estado 70


Estado 122

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . '{' declaraciones funciones '}'

    TOK_INHERITS  desplazar e ir al estado 160
    '{'           desplazar e ir al estado 161


Estado 123

   37 fn_name: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR .

    $default  reduce usando la regla 37 (fn_name)


Estado 124

    2 programa: TOK_MAIN '{' iniciar_codigo funciones inicio_main sentencias '}' .

    $default  reduce usando la regla 2 (programa)


Estado 125

   69 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139
    ']'      desplazar e ir al estado 162


Estado 126

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  101 lista_expresiones: exp . resto_lista_expresiones

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139
    ','      desplazar e ir al estado 163

    $default  reduce usando la regla 104 (resto_lista_expresiones)

    resto_lista_expresiones  ir al estado 164


Estado 127

   59 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 165


Estado 128

   67 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  desplazar e ir al estado 166


Estado 129

   64 asignacion: TOK_IDENTIFICADOR '=' exp .
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 64 (asignacion)


Estado 130

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   86    | '-' exp .
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    $default  reduce usando la regla 86 (exp)


Estado 131

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
   89    | '!' exp .

    $default  reduce usando la regla 89 (exp)


Estado 132

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
   92    | '(' exp . ')'
  105 comparacion: exp . TOK_IGUAL exp
  106            | exp . TOK_DISTINTO exp
  107            | exp . TOK_MENORIGUAL exp
  108            | exp . TOK_MAYORIGUAL exp
  109            | exp . '<' exp
  110            | exp . '>' exp

    TOK_IGUAL       desplazar e ir al estado 167
    TOK_DISTINTO    desplazar e ir al estado 168
    TOK_MENORIGUAL  desplazar e ir al estado 169
    TOK_MAYORIGUAL  desplazar e ir al estado 170
    TOK_OR          desplazar e ir al estado 134
    TOK_AND         desplazar e ir al estado 135
    '+'             desplazar e ir al estado 136
    '-'             desplazar e ir al estado 137
    '*'             desplazar e ir al estado 138
    '/'             desplazar e ir al estado 139
    ')'             desplazar e ir al estado 171
    '<'             desplazar e ir al estado 172
    '>'             desplazar e ir al estado 173


Estado 133

   93 exp: '(' comparacion . ')'

    ')'  desplazar e ir al estado 174


Estado 134

   88 exp: exp TOK_OR . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 175
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 135

   87 exp: exp TOK_AND . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 176
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 136

   82 exp: exp '+' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 177
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 137

   83 exp: exp '-' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 178
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 138

   85 exp: exp '*' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 179
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 139

   84 exp: exp '/' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 180
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 140

   95 exp: idf_llamada '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    $default  reduce usando la regla 102 (lista_expresiones)

    elemento_vector      ir al estado 90
    exp                  ir al estado 126
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    lista_expresiones    ir al estado 181
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 141

   96 exp: identificador_clase TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   97    | identificador_clase TOK_IDENTIFICADOR .

    '('  desplazar e ir al estado 182

    $default  reduce usando la regla 97 (exp)


Estado 142

   72 if_exp: TOK_IF '(' exp . ')' '{'
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139
    ')'      desplazar e ir al estado 183


Estado 143

   66 asignacion: elemento_vector '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  desplazar e ir al estado 184


Estado 144

   65 asignacion: elemento_vector '=' exp .
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 65 (asignacion)


Estado 145

   70 condicional: if_exp sentencias '}' .
   73 if_exp_sentencias: if_exp sentencias '}' .

    TOK_ELSE  reduce usando la regla 73 (if_exp_sentencias)
    $default  reduce usando la regla 70 (condicional)


Estado 146

   71 condicional: if_exp_sentencias TOK_ELSE '{' . sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 38
    TOK_DISCARD        desplazar e ir al estado 39
    TOK_ITSELF         desplazar e ir al estado 40
    TOK_RETURN         desplazar e ir al estado 41
    TOK_IF             desplazar e ir al estado 42
    TOK_WHILE          desplazar e ir al estado 43
    TOK_SCANF          desplazar e ir al estado 44
    TOK_PRINTF         desplazar e ir al estado 45

    sentencias           ir al estado 185
    sentencia            ir al estado 47
    sentencia_simple     ir al estado 48
    destruir_objeto      ir al estado 49
    bloque               ir al estado 50
    asignacion           ir al estado 51
    elemento_vector      ir al estado 52
    condicional          ir al estado 53
    if_exp               ir al estado 54
    if_exp_sentencias    ir al estado 55
    bucle                ir al estado 56
    while_exp            ir al estado 57
    while                ir al estado 58
    lectura              ir al estado 59
    escritura            ir al estado 60
    retorno_funcion      ir al estado 61
    identificador_clase  ir al estado 62


Estado 147

   74 bucle: while_exp sentencias '}' .

    $default  reduce usando la regla 74 (bucle)


Estado 148

   75 while_exp: while exp ')' . '{'

    '{'  desplazar e ir al estado 186


Estado 149

   58 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   68 asignacion: identificador_clase '.' TOK_IDENTIFICADOR . '=' exp

    '('  desplazar e ir al estado 187
    '='  desplazar e ir al estado 188


Estado 150

   47 idpf: TOK_IDENTIFICADOR .

    $default  reduce usando la regla 47 (idpf)


Estado 151

   45 parametro_funcion: tipo idpf .

    $default  reduce usando la regla 45 (parametro_funcion)


Estado 152

   46 parametro_funcion: clase_objeto TOK_IDENTIFICADOR .

    $default  reduce usando la regla 46 (parametro_funcion)


Estado 153

   36 fn_complete_name: fn_name '(' parametros_funcion ')' .

    $default  reduce usando la regla 36 (fn_complete_name)


Estado 154

   43 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT      desplazar e ir al estado 24
    TOK_BOOLEAN  desplazar e ir al estado 25
    '{'          desplazar e ir al estado 27

    tipo               ir al estado 113
    clase_objeto       ir al estado 114
    parametro_funcion  ir al estado 189


Estado 155

   41 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce usando la regla 41 (parametros_funcion)


Estado 156

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main . sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 38
    TOK_DISCARD        desplazar e ir al estado 39
    TOK_ITSELF         desplazar e ir al estado 40
    TOK_RETURN         desplazar e ir al estado 41
    TOK_IF             desplazar e ir al estado 42
    TOK_WHILE          desplazar e ir al estado 43
    TOK_SCANF          desplazar e ir al estado 44
    TOK_PRINTF         desplazar e ir al estado 45

    sentencias           ir al estado 190
    sentencia            ir al estado 47
    sentencia_simple     ir al estado 48
    destruir_objeto      ir al estado 49
    bloque               ir al estado 50
    asignacion           ir al estado 51
    elemento_vector      ir al estado 52
    condicional          ir al estado 53
    if_exp               ir al estado 54
    if_exp_sentencias    ir al estado 55
    bucle                ir al estado 56
    while_exp            ir al estado 57
    while                ir al estado 58
    lectura              ir al estado 59
    escritura            ir al estado 60
    retorno_funcion      ir al estado 61
    identificador_clase  ir al estado 62


Estado 157

   28 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA . ']'
  115 constante_entera: TOK_CONSTANTE_ENTERA .

    ']'  desplazar e ir al estado 191

    $default  reduce usando la regla 115 (constante_entera)


Estado 158

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera . ',' constante_entera ']'

    ','  desplazar e ir al estado 192


Estado 159

   31 identificadores: identificador ',' identificadores .

    $default  reduce usando la regla 31 (identificadores)


Estado 160

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS . identificadores '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 68

    identificadores  ir al estado 193
    identificador    ir al estado 70


Estado 161

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' . declaraciones funciones '}'

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    $default  reduce usando la regla 17 (modificadores_acceso)

    declaraciones         ir al estado 194
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12


Estado 162

   69 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce usando la regla 69 (elemento_vector)


Estado 163

  103 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 195
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 164

  101 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce usando la regla 101 (lista_expresiones)


Estado 165

   59 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 59 (sentencia_simple)


Estado 166

   67 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  desplazar e ir al estado 196


Estado 167

  105 comparacion: exp TOK_IGUAL . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 197
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 168

  106 comparacion: exp TOK_DISTINTO . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 198
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 169

  107 comparacion: exp TOK_MENORIGUAL . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 199
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 170

  108 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 200
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 171

   92 exp: '(' exp ')' .

    $default  reduce usando la regla 92 (exp)


Estado 172

  109 comparacion: exp '<' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 201
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 173

  110 comparacion: exp '>' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 202
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 174

   93 exp: '(' comparacion ')' .

    $default  reduce usando la regla 93 (exp)


Estado 175

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
   88    | exp TOK_OR exp .

    TOK_AND  desplazar e ir al estado 135
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 88 (exp)


Estado 176

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   87    | exp TOK_AND exp .
   88    | exp . TOK_OR exp

    $default  reduce usando la regla 87 (exp)


Estado 177

   82 exp: exp . '+' exp
   82    | exp '+' exp .
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 135
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 82 (exp)


Estado 178

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   83    | exp '-' exp .
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 135
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 83 (exp)


Estado 179

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   85    | exp '*' exp .
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    $default  reduce usando la regla 85 (exp)


Estado 180

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   84    | exp '/' exp .
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    $default  reduce usando la regla 84 (exp)


Estado 181

   95 exp: idf_llamada '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 203


Estado 182

   96 exp: identificador_clase TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    $default  reduce usando la regla 102 (lista_expresiones)

    elemento_vector      ir al estado 90
    exp                  ir al estado 126
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    lista_expresiones    ir al estado 204
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 183

   72 if_exp: TOK_IF '(' exp ')' . '{'

    '{'  desplazar e ir al estado 205


Estado 184

   66 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  desplazar e ir al estado 206


Estado 185

   71 condicional: if_exp_sentencias TOK_ELSE '{' sentencias . '}'

    '}'  desplazar e ir al estado 207


Estado 186

   75 while_exp: while exp ')' '{' .

    $default  reduce usando la regla 75 (while_exp)


Estado 187

   58 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    $default  reduce usando la regla 102 (lista_expresiones)

    elemento_vector      ir al estado 90
    exp                  ir al estado 126
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    lista_expresiones    ir al estado 208
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 188

   68 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    elemento_vector      ir al estado 90
    exp                  ir al estado 209
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 189

   43 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  desplazar e ir al estado 154

    $default  reduce usando la regla 44 (resto_parametros_funcion)

    resto_parametros_funcion  ir al estado 210


Estado 190

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias . '}'

    '}'  desplazar e ir al estado 211


Estado 191

   28 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']' .

    $default  reduce usando la regla 28 (clase_vector)


Estado 192

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' . constante_entera ']'

    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83

    constante_entera  ir al estado 212


Estado 193

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores . '{' declaraciones funciones '}'

    '{'  desplazar e ir al estado 213


Estado 194

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones . funciones '}'

    TOK_FUNCTION  desplazar e ir al estado 16

    $default  reduce usando la regla 33 (funciones)

    funciones         ir al estado 214
    funcion           ir al estado 18
    fn_declaration    ir al estado 19
    fn_complete_name  ir al estado 20
    fn_name           ir al estado 21


Estado 195

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  103 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139
    ','      desplazar e ir al estado 163

    $default  reduce usando la regla 104 (resto_lista_expresiones)

    resto_lista_expresiones  ir al estado 215


Estado 196

   67 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    $default  reduce usando la regla 102 (lista_expresiones)

    elemento_vector      ir al estado 90
    exp                  ir al estado 126
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    lista_expresiones    ir al estado 216
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 197

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  105 comparacion: exp TOK_IGUAL exp .

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 105 (comparacion)


Estado 198

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  106 comparacion: exp TOK_DISTINTO exp .

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 106 (comparacion)


Estado 199

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  107 comparacion: exp TOK_MENORIGUAL exp .

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 107 (comparacion)


Estado 200

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  108 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 108 (comparacion)


Estado 201

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  109 comparacion: exp '<' exp .

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 109 (comparacion)


Estado 202

   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp
  110 comparacion: exp '>' exp .

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 110 (comparacion)


Estado 203

   95 exp: idf_llamada '(' lista_expresiones ')' .

    $default  reduce usando la regla 95 (exp)


Estado 204

   96 exp: identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 217


Estado 205

   72 if_exp: TOK_IF '(' exp ')' '{' .

    $default  reduce usando la regla 72 (if_exp)


Estado 206

   66 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 82
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 83
    TOK_ITSELF            desplazar e ir al estado 40
    TOK_FALSE             desplazar e ir al estado 85
    TOK_TRUE              desplazar e ir al estado 86
    '-'                   desplazar e ir al estado 87
    '!'                   desplazar e ir al estado 88
    '('                   desplazar e ir al estado 89

    $default  reduce usando la regla 102 (lista_expresiones)

    elemento_vector      ir al estado 90
    exp                  ir al estado 126
    idf_llamada          ir al estado 92
    identificador_clase  ir al estado 93
    lista_expresiones    ir al estado 218
    constante            ir al estado 94
    constante_logica     ir al estado 95
    constante_entera     ir al estado 96


Estado 207

   71 condicional: if_exp_sentencias TOK_ELSE '{' sentencias '}' .

    $default  reduce usando la regla 71 (condicional)


Estado 208

   58 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 219


Estado 209

   68 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' exp .
   82 exp: exp . '+' exp
   83    | exp . '-' exp
   84    | exp . '/' exp
   85    | exp . '*' exp
   87    | exp . TOK_AND exp
   88    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 134
    TOK_AND  desplazar e ir al estado 135
    '+'      desplazar e ir al estado 136
    '-'      desplazar e ir al estado 137
    '*'      desplazar e ir al estado 138
    '/'      desplazar e ir al estado 139

    $default  reduce usando la regla 68 (asignacion)


Estado 210

   43 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce usando la regla 43 (resto_parametros_funcion)


Estado 211

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' .

    $default  reduce usando la regla 1 (programa)


Estado 212

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' constante_entera . ']'

    ']'  desplazar e ir al estado 220


Estado 213

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' . declaraciones funciones '}'

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    $default  reduce usando la regla 17 (modificadores_acceso)

    declaraciones         ir al estado 221
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12


Estado 214

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones . '}'

    '}'  desplazar e ir al estado 222


Estado 215

  103 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce usando la regla 103 (resto_lista_expresiones)


Estado 216

   67 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 223


Estado 217

   96 exp: identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 96 (exp)


Estado 218

   66 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 224


Estado 219

   58 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 58 (sentencia_simple)


Estado 220

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' constante_entera ']' .

    $default  reduce usando la regla 29 (clase_vector)


Estado 221

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones . funciones '}'

    TOK_FUNCTION  desplazar e ir al estado 16

    $default  reduce usando la regla 33 (funciones)

    funciones         ir al estado 225
    funcion           ir al estado 18
    fn_declaration    ir al estado 19
    fn_complete_name  ir al estado 20
    fn_name           ir al estado 21


Estado 222

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}' .

    $default  reduce usando la regla 22 (declaracion_clase)


Estado 223

   67 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 67 (asignacion)


Estado 224

   66 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 66 (asignacion)


Estado 225

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones . '}'

    '}'  desplazar e ir al estado 226


Estado 226

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}' .

    $default  reduce usando la regla 21 (declaracion_clase)
